import cv2
import numpy as np
from pdf2image import convert_from_path
from PIL import Image

# Step 1: Convert PDFs to high-resolution images
empty_pdf_path = "Sample 1500_2012_02_removed.pdf"
filled_pdf_path = "1000265175.pdf"  # use actual path if different

empty_page = convert_from_path(empty_pdf_path, dpi=300)[0]
filled_page = convert_from_path(filled_pdf_path, dpi=300)[0]

# Convert PIL images to OpenCV
empty_img = cv2.cvtColor(np.array(empty_page), cv2.COLOR_RGB2BGR)
filled_img = cv2.cvtColor(np.array(filled_page), cv2.COLOR_RGB2BGR)

# Step 2: Remove red background (common in CMS-1500 forms)
hsv = cv2.cvtColor(filled_img, cv2.COLOR_BGR2HSV)
lower_red = np.array([0, 50, 50])
upper_red = np.array([10, 255, 255])
mask1 = cv2.inRange(hsv, lower_red, upper_red)

lower_red2 = np.array([160, 50, 50])
upper_red2 = np.array([180, 255, 255])
mask2 = cv2.inRange(hsv, lower_red2, upper_red2)

red_mask = mask1 | mask2
non_red_mask = cv2.bitwise_not(red_mask)

# Step 3: Extract black text and filled content
filled_content = cv2.bitwise_and(filled_img, filled_img, mask=non_red_mask)

# Optional cleanup (remove noise)
gray_content = cv2.cvtColor(filled_content, cv2.COLOR_BGR2GRAY)
_, text_mask = cv2.threshold(gray_content, 30, 255, cv2.THRESH_BINARY)
text_mask_3ch = cv2.merge([text_mask, text_mask, text_mask])
cleaned_content = cv2.bitwise_and(filled_content, text_mask_3ch)

# Step 4: Overlay cleaned content on top of empty form
final_output = cv2.addWeighted(empty_img, 1.0, cleaned_content, 1.0, 0)

# Step 5: Save output as PDF
final_rgb = cv2.cvtColor(final_output, cv2.COLOR_BGR2RGB)
output_pil = Image.fromarray(final_rgb)
output_pil.save("final_overlay_output.pdf")
