import base64
import time
from openai import AzureOpenAI

# Azure OpenAI Configuration
api_key = "your_azure_openai_api_key"
azure_endpoint = "https://your-resource-name.openai.azure.com"
api_version = "2024-02-15-preview"
deployment_name = "your-gpt4o-deployment"  # Your GPT-4o deployment name

# Initialize the Azure OpenAI client
client = AzureOpenAI(
    api_key=api_key,
    api_version=api_version,
    azure_endpoint=azure_endpoint
)

def process_pdf(pdf_path, prompt):
    """Process a PDF file using Azure OpenAI batch API"""
    # Convert PDF to base64
    with open(pdf_path, "rb") as pdf_file:
        pdf_base64 = base64.b64encode(pdf_file.read()).decode("utf-8")
    
    # Create batch input
    batch_data = [
        {
            "messages": [
                {
                    "role": "system",
                    "content": "You are an AI assistant that can analyze PDF documents."
                },
                {
                    "role": "user", 
                    "content": [
                        {"type": "text", "text": prompt},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:application/pdf;base64,{pdf_base64}"
                            }
                        }
                    ]
                }
            ]
        }
    ]
    
    # Submit batch job
    batch_job = client.batch.create(
        model=deployment_name,
        inputs=batch_data
    )
    
    print(f"Batch job submitted with ID: {batch_job.id}")
    
    # Poll for results
    while True:
        status = client.batch.retrieve(batch_id=batch_job.id)
        print(f"Status: {status.status}")
        
        if status.status == "succeeded":
            results = client.batch.retrieve_content(batch_id=batch_job.id)
            return results
        elif status.status == "failed":
            print("Batch job failed")
            return None
        
        time.sleep(5)  # Check every 5 seconds

if __name__ == "__main__":
    pdf_path = "your_document.pdf"  # Replace with your PDF file path
    prompt = "Please analyze this PDF and provide a summary"
    
    results = process_pdf(pdf_path, prompt)
    
    if results:
        print("\nResults:")
        for result in results:
            if hasattr(result, 'choices') and result.choices:
                print(result.choices[0].message.content)
            else:
                print(result)
