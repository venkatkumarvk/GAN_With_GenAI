# In the "Extract Data" mode where you handle blob storage input
else:  # Azure Blob Storage
    if not blob_service_client:
        st.error("Azure Blob Storage connection is required for this option. Please set AZURE_STORAGE_CONNECTION_STRING environment variable.")
        return
    
    # Get available containers
    containers = get_blob_containers(blob_service_client)
    
    if not containers:
        st.error("No containers found in the Azure Blob Storage account. Please create at least one container.")
        return
    
    # Container selection
    selected_container = st.selectbox(
        "Select Container",
        containers,
        help="Choose an Azure Blob Storage container"
    )
    
    # Get folders in the selected container
    folders = get_blob_folders(blob_service_client, selected_container)
    
    # Folder selection
    selected_folder = st.selectbox(
        "Select Folder",
        folders,
        format_func=lambda x: "Root (No Folder)" if x == "" else x,
        help="Choose a folder within the container"
    )
    
    # List available PDFs with details
    pdf_blobs_details = list_pdf_blobs_with_details(blob_service_client, selected_container, selected_folder)
    
    if not pdf_blobs_details:
        st.warning(f"No PDF files found in the selected location. Please choose another container or folder.")
        return
    
    # Show available PDFs in a table
    st.write(f"Found {len(pdf_blobs_details)} PDF files:")
    
    # Create a DataFrame for better display
    pdf_files_df = pd.DataFrame(pdf_blobs_details)
    pdf_files_df = pdf_files_df[['filename', 'size_kb', 'last_modified']]
    pdf_files_df.columns = ['Filename', 'Size (KB)', 'Last Modified']
    
    # Show the table
    st.dataframe(pdf_files_df, use_container_width=True)
    
    # Multi-select files
    file_options = [blob["filename"] for blob in pdf_blobs_details]
    
    # Default to selecting all files
    default_selection = file_options.copy()
    
    selected_files = st.multiselect(
        "Select Files to Process",
        options=file_options,
        default=default_selection,
        help="Select one or more files to process"
    )
    
    if not selected_files:
        st.warning("Please select at least one file to process")
        files_to_process = None
    else:
        # Get full blob names for selected files
        pdf_blobs = [blob["name"] for blob in pdf_blobs_details if blob["filename"] in selected_files]
        
        st.info(f"Selected {len(pdf_blobs)} files for processing")
        
        # Display previews in sidebar
        display_pdf_previews_sidebar(pdf_blobs, blob_service_client, selected_container)
        
        # Process button
        process_button = st.button("Process Blob Documents", type="primary")
        
        files_to_process = pdf_blobs if process_button else None
