def list_pdf_blobs_with_details(blob_service_client, container_name, folder_prefix=""):
    """
    List all PDF blobs in the specified container and folder prefix with details.
    """
    try:
        container_client = blob_service_client.get_container_client(container_name)
        
        # Get blobs with the folder prefix that are PDFs
        pdf_blobs = []
        for blob in container_client.list_blobs(name_starts_with=folder_prefix):
            if blob.name.lower().endswith('.pdf'):
                # Get file size
                size_kb = blob.size / 1024
                # Get last modified time
                last_modified = blob.last_modified
                # Add to the list
                pdf_blobs.append({
                    "name": blob.name,
                    "filename": blob.name.split('/')[-1],
                    "size_kb": round(size_kb, 2),
                    "last_modified": last_modified
                })
                
        return pdf_blobs
    except Exception as e:
        st.error(f"Error listing PDF blobs: {e}")
        return []


else:  # Azure Blob Storage
    if not blob_service_client:
        st.error("Azure Blob Storage connection is required for this option. Please set AZURE_STORAGE_CONNECTION_STRING environment variable.")
        return
    
    # Get available containers
    containers = get_blob_containers(blob_service_client)
    
    if not containers:
        st.error("No containers found in the Azure Blob Storage account. Please create at least one container.")
        return
    
    # Container selection
    selected_container = st.selectbox(
        "Select Container",
        containers,
        help="Choose an Azure Blob Storage container"
    )
    
    # Get folders in the selected container
    folders = get_blob_folders(blob_service_client, selected_container)
    
    # Folder selection
    selected_folder = st.selectbox(
        "Select Folder",
        folders,
        format_func=lambda x: "Root (No Folder)" if x == "" else x,
        help="Choose a folder within the container"
    )
    
    # List available PDFs
    pdf_blobs = list_pdf_blobs(blob_service_client, selected_container, selected_folder)
    
    if not pdf_blobs:
        st.warning(f"No PDF files found in the selected location. Please choose another container or folder.")
        return
    
    # Show available PDFs
    st.write(f"Found {len(pdf_blobs)} PDF files:")
    
    # Create columns for better display
    pdf_cols = st.columns(3)
    for i, pdf in enumerate(pdf_blobs):
        display_name = pdf.split('/')[-1]  # Remove folder path for display
        pdf_cols[i % 3].write(f"- {display_name}")
        if i >= 11:  # Limit display to avoid cluttering
            pdf_cols[(i + 1) % 3].write("...")
            break
    
    # Display previews in sidebar
    display_pdf_previews_sidebar(pdf_blobs, blob_service_client, selected_container)
    
    # Process button
    process_button = st.button("Process Blob Documents", type="primary")
    
    files_to_process = pdf_blobs if process_button else None
