import cv2

# Load base and overlay images
background = cv2.imread('background.jpg')
overlay = cv2.imread('overlay.png')

# Resize overlay to match background size
overlay = cv2.resize(overlay, (background.shape[1], background.shape[0]))

# Blend the images (adjust the weights as needed)
combined = cv2.addWeighted(background, 0.7, overlay, 0.3, 0)

# Save the result
cv2.imwrite('output_overlay.jpg', combined)

##
import cv2
import numpy as np

# Load background and overlay image with alpha
background = cv2.imread('background.jpg')
overlay = cv2.imread('overlay.png', cv2.IMREAD_UNCHANGED)  # includes alpha

# Resize overlay to match background
overlay = cv2.resize(overlay, (background.shape[1], background.shape[0]))

# Separate alpha channel
b, g, r, a = cv2.split(overlay)
overlay_rgb = cv2.merge((b, g, r))
alpha_mask = cv2.merge((a, a, a)) / 255.0

# Blend
foreground = overlay_rgb * alpha_mask
background = background * (1 - alpha_mask)
result = cv2.add(foreground.astype(np.uint8), background.astype(np.uint8))

# Save result
cv2.imwrite('output_overlay.png', result)
