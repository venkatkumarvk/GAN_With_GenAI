def create_batch_jsonl_file(image_data_urls, prompts, filename_prefix):
    """
    Create a JSONL file for batch processing and store in a designated folder with timestamp.
    
    Parameters:
    - image_data_urls: List of image data URLs
    - prompts: List of prompts matching the data URLs
    - filename_prefix: Prefix for the filename (e.g., PDF name)
    
    Returns:
    - Path to the created JSONL file
    """
    import json
    import os
    from datetime import datetime
    
    # Create folder for batch files if it doesn't exist
    batch_folder = "batch_files"
    os.makedirs(batch_folder, exist_ok=True)
    
    # Create a timestamp string
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    
    # Create filename with prefix and timestamp
    safe_prefix = ''.join(c for c in filename_prefix if c.isalnum() or c in '._- ')
    filepath = os.path.join(batch_folder, f"{safe_prefix}_{timestamp}.jsonl")
    
    # Write the JSONL file
    with open(filepath, 'w') as f:
        # Write each entry as a JSON line
        for i in range(len(image_data_urls)):
            entry = {
                "messages": [
                    {"role": "system", "content": "You are an AI assistant that classifies documents and extracts information from invoices when appropriate."},
                    {"role": "user", "content": [
                        {"type": "text", "text": prompts[i]},
                        {"type": "image_url", "image_url": {"url": image_data_urls[i]}}
                    ]}
                ],
                "max_tokens": 2000,
                "temperature": 0.5,
                "response_format": {"type": "json_object"}
            }
            f.write(json.dumps(entry) + '\n')
    
    return filepath

#function
# Create JSONL file for batch processing with filename as prefix
jsonl_filepath = create_batch_jsonl_file(
    image_data_urls, 
    prompts, 
    os.path.splitext(filename)[0]  # Use filename without extension as prefix
)

#funciton
# Create JSONL file for batch processing with filename as prefix
jsonl_filepath = create_batch_jsonl_file(
    image_data_urls, 
    prompts, 
    os.path.splitext(filename)[0]  # Use filename without extension as prefix
)
