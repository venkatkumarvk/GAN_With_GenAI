import pyodbc

def log_file_status_begin(filename, source_path, target_path, archive_path, status_desc, config):
    try:
        conn_str = config["sql_server"]["connection_string"]
        conn = pyodbc.connect(conn_str)
        cur = conn.cursor()

        query = """
        DECLARE @OutputKey BIGINT;
        EXEC [dbo].[uspXUpdateDocumentProcessor]
            @documentProcessorKey = NULL,
            @fileName = ?,
            @sourceFilePath = ?,
            @targetFilePath = ?,
            @archiveFilePath = ?,
            @status = 'BEGIN',
            @statusDesc = ?,
            @returnDocumentProcessorKeyFlag = 1,
            @documentProcessorKeyOut = @OutputKey OUTPUT;
        SELECT @OutputKey;
        """

        # âœ… Fetch actual inserted SQL ID (e.g., 99)
        document_id = cur.execute(query, filename, source_path, target_path, archive_path, status_desc).fetchval()
        conn.commit()
        cur.close()
        conn.close()

        print(f"[DEBUG] SQL INSERT - DocumentProcessor_Key: {document_id}")
        return document_id

    except Exception as e:
        print(f"[ERROR] log_file_status_begin failed: {e}")
        return None


def log_file_status_update(document_id, filename, source_path, target_path, archive_path, status, status_desc, config):
    try:
        conn_str = config["sql_server"]["connection_string"]
        conn = pyodbc.connect(conn_str)
        cur = conn.cursor()

        query = """
        EXEC [dbo].[uspXUpdateDocumentProcessor]
            @documentProcessorKey = ?,
            @fileName = ?,
            @sourceFilePath = ?,
            @targetFilePath = ?,
            @archiveFilePath = ?,
            @status = ?,
            @statusDesc = ?,
            @returnDocumentProcessorKeyFlag = 0,
            @documentProcessorKeyOut = NULL;
        """

        print(f"[DEBUG] SQL UPDATE - Using DocumentProcessor_Key: {document_id}")
        cur.execute(query, document_id, filename, source_path, target_path, archive_path, status, status_desc)
        conn.commit()
        cur.close()
        conn.close()

    except Exception as e:
        print(f"[ERROR] log_file_status_update failed: {e}")
