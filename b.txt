from azure.storage.blob import BlobServiceClient
import os

def list_container_files(container_name, connection_string=None):
    """
    List all files in a specific Azure Blob container
    
    Args:
        container_name: Name of the container to list files from
        connection_string: Azure Storage connection string
    """
    try:
        # Initialize blob service client
        if connection_string:
            blob_service_client = BlobServiceClient.from_connection_string(connection_string)
        else:
            # Try to get from environment variable
            connection_string = os.getenv('AZURE_STORAGE_CONNECTION_STRING')
            if not connection_string:
                print("Error: No connection string provided")
                return
            blob_service_client = BlobServiceClient.from_connection_string(connection_string)
        
        # Get container client
        container_client = blob_service_client.get_container_client(container_name)
        
        # List all blobs in the container
        blob_list = container_client.list_blobs()
        
        print(f"\nFiles in container '{container_name}':")
        print("-" * 50)
        
        file_count = 0
        for blob in blob_list:
            file_count += 1
            
            # Get file extension
            file_name = blob.name
            file_extension = file_name.split('.')[-1].upper() if '.' in file_name else 'No extension'
            
            # Format file size
            size_mb = blob.size / (1024 * 1024) if blob.size else 0
            
            print(f"{file_count}. {file_name}")
            print(f"   Type: {file_extension}")
            print(f"   Size: {size_mb:.2f} MB")
            print(f"   Modified: {blob.last_modified}")
            print()
        
        if file_count == 0:
            print("No files found in this container.")
        else:
            print(f"Total files: {file_count}")
            
    except Exception as e:
        print(f"Error accessing container '{container_name}': {e}")

def main():
    # Get container name from user
    container_name = input("Enter container name: ").strip()
    
    if not container_name:
        print("Container name cannot be empty!")
        return
    
    # You can either:
    # 1. Set your connection string here
    connection_string = "your_connection_string_here"
    
    # 2. Or set it as environment variable AZURE_STORAGE_CONNECTION_STRING
    # connection_string = None
    
    # List files in the container
    list_container_files(container_name, connection_string)

if __name__ == "__main__":
    main()
